plugins {
    id 'com.github.johnrengelman.shadow' version '7.+'
    id 'com.modrinth.minotaur' version '2.+'
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${project.forge_version}"
    modApi "dev.architectury:architectury-forge:${project.architectury_version}"
    common(project(path: ":playerpets-1.19.4:common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":playerpets-1.19.4:common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    configurations = [project.configurations.shadowCommon]
    classifier 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier 'dev'
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

modrinth {
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'playerpets'
    versionName = '[1.19.4 Forge]'
    versionNumber = project.version
    versionType = 'alpha'
    uploadFile = remapJar
    gameVersions = ['1.19.4']
    loaders = ['forge']
    dependencies {
        required.project 'architectury-api'
    }
    changelog = new File('changelog.md').text.replace('%version%', project.version)
}